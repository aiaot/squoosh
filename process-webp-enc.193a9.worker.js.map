{"version":3,"sources":["webpack:///./src/codecs/util.ts","webpack:///./codecs/webp_enc/webp_enc.js","webpack:///./codecs/webp_enc/webp_enc.wasm","webpack:///./src/codecs/webp/encoder.ts"],"names":["initEmscriptenModule","moduleFactory","wasmUrl","Promise","resolve","module","noInitialRun","locateFile","url","endsWith","[object Object]","then","__webpack_require__","d","__webpack_exports__","webp_enc","_scriptDir","document","currentScript","src","undefined","key","Module","moduleOverrides","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","nodeFS","nodePath","scriptDirectory","__dirname","filename","binary","ret","e","Error","code","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","arguments","quit","self","location","href","indexOf","substr","lastIndexOf","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","title","out","console","log","bind","print","err","printErr","warn","STACK_ALIGN","alignMemory","size","factor","Math","ceil","asm2wasmImports","f64-rem","x","y","debugger","ABORT","Array","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","endPtr","subarray","decode","u0","u1","u2","u3","u4","str","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","STATICTOP","STACK_BASE","STACKTOP","DYNAMIC_BASE","DYNAMICTOP_PTR","MIN_TOTAL_MEMORY","alignUp","multiple","updateGlobalBuffer","buf","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Function","prototype","call","Object","getOwnPropertyDescriptor","ArrayBuffer","get","byteLength","TOTAL_STACK","TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","func","arg","WebAssembly","Memory","initial","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","addOnPreRun","cb","unshift","addOnPostRun","runDependencies","runDependencyWatcher","dependenciesFulfilled","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","path","info","global","env","asm2wasm","parent","exports","getBinary","createWasm","providedBuffer","receiveInstance","instance","memory","newBuffer","oldBuffer","oldView","set","mergeMemory","id","clearInterval","removeRunDependency","NaN","Infinity","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","reject","credentials","catch","instantiate","reason","instantiateStreaming","oldSize","grow","wasmReallocBuffer","TABLE_SIZE","MAX_TABLE_SIZE","Table","maximum","element","integrateWasmJS","STATIC_BASE","push","__GLOBAL__sub_I_webp_enc_cpp","__GLOBAL__sub_I_bind_cpp","__ZSt18uncaught_exceptionv","uncaught_exception","EXCEPTIONS","last","caught","infos","deAdjust","adjusted","adj","len","i","addRef","refcount","decRef","rethrown","destructor","___cxa_free_exception","clearRef","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","t","hasUtf","apply","min","Pointer_stringify","get64","low","high","getZero","structRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","this","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","charCodeAt","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","message","stack","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","type","unregisteredTypes","registered","dt","getShiftFromSize","TypeError","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","emval_free_list","emval_handle_array","value","__emval_decref","handle","count_emval_handles","count","get_first_emval","__emval_register","exposePublicSymbol","numArguments","overloadTable","proto","methodName","humanName","prevFunc","argCount","ensureOverloadTable","enumReadValueFromPointer","signed","heap","getTypeName","___getTypeName","rv","_free","requireRegisteredType","impl","_embind_repr","v","floatReadValueFromPointer","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","destructorFunction","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","obj","r","new_","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","join","makeDynCaller","UnboundTypeError","integerReadValueFromPointer","PTHREAD_SPECIFIC","PTHREAD_SPECIFIC_NEXT_KEY","ERRNO_CODES","EPERM","ENOENT","ESRCH","EINTR","EIO","ENXIO","E2BIG","ENOEXEC","EBADF","ECHILD","EAGAIN","EWOULDBLOCK","ENOMEM","EACCES","EFAULT","ENOTBLK","EBUSY","EEXIST","EXDEV","ENODEV","ENOTDIR","EISDIR","EINVAL","ENFILE","EMFILE","ENOTTY","ETXTBSY","EFBIG","ENOSPC","ESPIPE","EROFS","EMLINK","EPIPE","EDOM","ERANGE","ENOMSG","EIDRM","ECHRNG","EL2NSYNC","EL3HLT","EL3RST","ELNRNG","EUNATCH","ENOCSI","EL2HLT","EDEADLK","ENOLCK","EBADE","EBADR","EXFULL","ENOANO","EBADRQC","EBADSLT","EDEADLOCK","EBFONT","ENOSTR","ENODATA","ETIME","ENOSR","ENONET","ENOPKG","EREMOTE","ENOLINK","EADV","ESRMNT","ECOMM","EPROTO","EMULTIHOP","EDOTDOT","EBADMSG","ENOTUNIQ","EBADFD","EREMCHG","ELIBACC","ELIBBAD","ELIBSCN","ELIBMAX","ELIBEXEC","ENOSYS","ENOTEMPTY","ENAMETOOLONG","ELOOP","EOPNOTSUPP","EPFNOSUPPORT","ECONNRESET","ENOBUFS","EAFNOSUPPORT","EPROTOTYPE","ENOTSOCK","ENOPROTOOPT","ESHUTDOWN","ECONNREFUSED","EADDRINUSE","ECONNABORTED","ENETUNREACH","ENETDOWN","ETIMEDOUT","EHOSTDOWN","EHOSTUNREACH","EINPROGRESS","EALREADY","EDESTADDRREQ","EMSGSIZE","EPROTONOSUPPORT","ESOCKTNOSUPPORT","EADDRNOTAVAIL","ENETRESET","EISCONN","ENOTCONN","ETOOMANYREFS","EUSERS","EDQUOT","ESTALE","ENOTSUP","ENOMEDIUM","EILSEQ","EOVERFLOW","ECANCELED","ENOTRECOVERABLE","EOWNERDEAD","ESTRPIPE","codes","embind_init_charCodes","staticAlloc","asmGlobalArg","asmLibraryArg","J","OLD_TOTAL_MEMORY","max","replacement","D","u","k","_malloc","j","p","which","getStreamFromFD","offset_low","result","whence","offset","FS","llseek","position","getdents","ErrnoError","errno","h","iov","iovcnt","o","close","I","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","map","field","getterReturnType","concat","setterArgumentType","fieldTypes","fieldName","getter","getterContext","setter","setterContext","write","fromWireType","toWireType","argPackAdvance","readValueFromPointer","H","trueValue","falseValue","wt","G","F","isSigned","ctor","values","E","rawEnumType","enumValue","enumType","Enum","Value","n","g","rawArgTypesAddr","rawInvoker","fn","firstElement","array","heap32VectorToArray","types","unboundTypes","seen","visit","throwUnboundTypeError","invokerArgsArray","replacePublicSymbol","primitiveType","minRange","maxRange","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","m","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","a","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","outPtr","maxBytesToWrite","outU8Array","outIdx","endIdx","stringToUTF8Array","stringToUTF8","charCode","C","charSize","getHeap","HEAP","start","B","constructorSignature","destructorSignature","getterSignature","setterSignature","A","isVoid","z","argv","l","w","dest","num","LN10","s","_pthread_once","q","b","asm","run","doRun","postRun","preRun","setTimeout","what","JSON","stringify","old","runCaller","encode","_codecs_webp_enc_webp_enc__WEBPACK_IMPORTED_MODULE_0__","_codecs_webp_enc_webp_enc__WEBPACK_IMPORTED_MODULE_0___default","_codecs_webp_enc_webp_enc_wasm__WEBPACK_IMPORTED_MODULE_1__","_codecs_webp_enc_webp_enc_wasm__WEBPACK_IMPORTED_MODULE_1___default","_util__WEBPACK_IMPORTED_MODULE_2__","emscriptenModule","async","resultView","width","height","free_result"],"mappings":"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","file":"process-webp-enc.193a9.worker.js","sourcesContent":["type ModuleFactory<M extends EmscriptenWasm.Module> = (\n  opts: EmscriptenWasm.ModuleOpts,\n) => M;\n\nexport function initEmscriptenModule<T extends EmscriptenWasm.Module>(\n  moduleFactory: ModuleFactory<T>,\n  wasmUrl: string,\n): Promise<T> {\n  return new Promise((resolve) => {\n    const module = moduleFactory({\n      // Just to be safe, don't automatically invoke any wasm functions\n      noInitialRun: true,\n      locateFile(url: string): string {\n        // Redirect the request for the wasm binary to whatever webpack gave us.\n        if (url.endsWith('.wasm')) return wasmUrl;\n        return url;\n      },\n      onRuntimeInitialized() {\n        // An Emscripten is a then-able that resolves with itself, causing an infite loop when you\n        // wrap it in a real promise. Delete the `then` prop solves this for now.\n        // https://github.com/kripken/emscripten/issues/5820\n        delete (module as any).then;\n        resolve(module);\n      },\n    });\n  });\n}\n","\nvar webp_enc = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(webp_enc) {\n  webp_enc = webp_enc || {};\n\nvar Module=typeof webp_enc!==\"undefined\"?webp_enc:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",abort);Module[\"quit\"]=(function(status){process[\"exit\"](status)});Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;return Math.ceil(size/factor)*factor}var asm2wasmImports={\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})};var functionPointers=new Array(0);var GLOBAL_BASE=1024;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}function enlargeMemory(){var PAGE_MULTIPLE=65536;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module[\"reallocBuffer\"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmBinaryFile=\"webp_enc.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":asm2wasmImports,\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function createWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){err(\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource,(function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=65536;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}});Module[\"reallocBuffer\"]=(function(size){return wasmReallocBuffer(size)});Module[\"asm\"]=(function(global,env,providedBuffer){if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"__memory_base\"]){env[\"__memory_base\"]=Module[\"STATIC_BASE\"]}if(!env[\"__table_base\"]){env[\"__table_base\"]=0}var exports=createWasm(global,env,providedBuffer);return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+37744;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_webp_enc_cpp()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});var STATIC_BUMP=37744;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;STATICTOP+=16;function ___cxa_allocate_exception(size){return _malloc(size)}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}var SYSCALLS={buffers:[null,[],[]],printChar:(function(stream,curr){var buffer=SYSCALLS.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map((function(field){return field.getterReturnType})).concat(fieldRecords.map((function(field){return field.setterArgumentType})));whenDependentTypesAreResolved([structType],fieldTypes,(function(fieldTypes){var fields={};fieldRecords.forEach((function(field,i){var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:(function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))}),write:(function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)})}}));return[{name:reg.name,\"fromWireType\":(function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv}),\"toWireType\":(function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(\"Missing field\")}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]}))}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function enumReadValueFromPointer(name,shift,signed){switch(shift){case 0:return(function(pointer){var heap=signed?HEAP8:HEAPU8;return this[\"fromWireType\"](heap[pointer])});case 1:return(function(pointer){var heap=signed?HEAP16:HEAPU16;return this[\"fromWireType\"](heap[pointer>>1])});case 2:return(function(pointer){var heap=signed?HEAP32:HEAPU32;return this[\"fromWireType\"](heap[pointer>>2])});default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_enum(rawType,name,size,isSigned){var shift=getShiftFromSize(size);name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":(function(c){return this.constructor.values[c]}),\"toWireType\":(function(destructors,c){return c.value}),\"argPackAdvance\":8,\"readValueFromPointer\":enumReadValueFromPointer(name,shift,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __embind_register_enum_value(rawEnumType,name,enumValue){var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(enumType.name+\"_\"+name,(function(){}))}});Enum.values[enumValue]=Value;Enum[name]=Value}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,(function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)}),argCount-1);whenDependentTypesAreResolved([],argTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]}))}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(function(){return lengthBytesUTF8(value)})}else{getLength=(function(){return value.length})}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function _llvm_log10_f32(x){return Math.log(x)/Math.LN10}function _llvm_log10_f64(){return _llvm_log10_f32.apply(null,arguments)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_emval();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module[\"wasmTableSize\"]=258;Module[\"wasmMaxTableSize\"]=258;Module.asmGlobalArg={};Module.asmLibraryArg={\"c\":abort,\"J\":enlargeMemory,\"D\":getTotalMemory,\"u\":abortOnCannotGrowMemory,\"k\":___cxa_allocate_exception,\"j\":___cxa_throw,\"i\":___setErrNo,\"p\":___syscall140,\"h\":___syscall146,\"o\":___syscall6,\"I\":__embind_finalize_value_object,\"H\":__embind_register_bool,\"G\":__embind_register_emval,\"F\":__embind_register_enum,\"E\":__embind_register_enum_value,\"n\":__embind_register_float,\"g\":__embind_register_function,\"e\":__embind_register_integer,\"d\":__embind_register_memory_view,\"m\":__embind_register_std_string,\"C\":__embind_register_std_wstring,\"B\":__embind_register_value_object,\"f\":__embind_register_value_object_field,\"A\":__embind_register_void,\"z\":__emval_decref,\"y\":__emval_incref,\"x\":__emval_take_value,\"l\":_abort,\"w\":_emscripten_memcpy_big,\"v\":_llvm_log10_f64,\"t\":_pthread_getspecific,\"s\":_pthread_key_create,\"r\":_pthread_once,\"q\":_pthread_setspecific,\"a\":DYNAMICTOP_PTR,\"b\":STACKTOP};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=(function(){return Module[\"asm\"][\"K\"].apply(null,arguments)});var __GLOBAL__sub_I_webp_enc_cpp=Module[\"__GLOBAL__sub_I_webp_enc_cpp\"]=(function(){return Module[\"asm\"][\"L\"].apply(null,arguments)});var ___errno_location=Module[\"___errno_location\"]=(function(){return Module[\"asm\"][\"M\"].apply(null,arguments)});var ___getTypeName=Module[\"___getTypeName\"]=(function(){return Module[\"asm\"][\"N\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"O\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"P\"].apply(null,arguments)});var dynCall_diiii=Module[\"dynCall_diiii\"]=(function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)});var dynCall_fii=Module[\"dynCall_fii\"]=(function(){return Module[\"asm\"][\"R\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"S\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"T\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"U\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"V\"].apply(null,arguments)});var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=(function(){return Module[\"asm\"][\"W\"].apply(null,arguments)});var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=(function(){return Module[\"asm\"][\"X\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)});var dynCall_viif=Module[\"dynCall_viif\"]=(function(){return Module[\"asm\"][\"_\"].apply(null,arguments)});var dynCall_viii=Module[\"dynCall_viii\"]=(function(){return Module[\"asm\"][\"$\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)});var dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=(function(){return Module[\"asm\"][\"da\"].apply(null,arguments)});Module[\"asm\"]=asm;Module[\"then\"]=(function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run()\n\n\n\n\n\n  return webp_enc;\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n    module.exports = webp_enc;\n  else if (typeof define === 'function' && define['amd'])\n    define([], function() { return webp_enc; });\n  else if (typeof exports === 'object')\n    exports[\"webp_enc\"] = webp_enc;\n  \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = __webpack_public_path__ + \"webp_enc.ea665.wasm\";","import webp_enc, { WebPModule } from '../../../codecs/webp_enc/webp_enc';\nimport wasmUrl from '../../../codecs/webp_enc/webp_enc.wasm';\nimport { EncodeOptions } from './encoder-meta';\nimport { initEmscriptenModule } from '../util';\n\nlet emscriptenModule: Promise<WebPModule>;\n\nexport async function encode(data: ImageData, options: EncodeOptions): Promise<ArrayBuffer> {\n  if (!emscriptenModule) emscriptenModule = initEmscriptenModule(webp_enc, wasmUrl);\n\n  const module = await emscriptenModule;\n  const resultView = module.encode(data.data, data.width, data.height, options);\n  const result = new Uint8Array(resultView);\n  module.free_result();\n\n  // wasm can’t run on SharedArrayBuffers, so we hard-cast to ArrayBuffer.\n  return result.buffer as ArrayBuffer;\n}\n"],"sourceRoot":""}